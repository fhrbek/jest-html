// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AppContents can redirect to root if needed 1`] = `
<div
  dataMockType="Redirect"
  to="/"
>
  <div
    style={
      Object {
        "color": "blue",
        "fontWeight": "bold",
      }
    }
  >
    Redirect
  </div>
</div>
------------HTML PREVIEW---------------
<div
  dataMockType="Redirect"
  to="/"
>
  <div style="color:blue;font-weight:bold;">
    Redirect
  </div>
</div>
`;

exports[`AppContents renders a folder with subfolders and suites correctly 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="giu-floats"
    style={
      Object {
        "height": 0,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
      }
    }
  />
  <div
    className="giu-hints"
  />
  <div
    dataMockType="Sidebar"
    fRaw={false}
    linkBack="/folder/-/path/to"
    subtitle="-/path/to/snapshots"
    title={
      <span>
        <Icon
          icon="folder-open-o"
          style={
            Object {
              "cursor": "default",
            }
          }
        />
         
        snapshots
      </span>
    }
    toggleRaw={[Function]}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="folder-o"
      id="folder_-/path/to/folder/super/nested/folder"
      label="super/nested/folder"
      link="/folder/-/path/to/folder/super/nested/folder"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="folder-o"
      id="folder_-/path/to/folder/subdir"
      label="subdir"
      link="/folder/-/path/to/folder/subdir"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="file-o"
      id="suite_-/path/to/folder/suite1.snap"
      label="suite1.​snap"
      link="/suite/-/path/to/folder/suite1.snap"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="file-o"
      id="suite_-/path/to/folder/suite2.snap"
      label="suite2.​snap"
      link="/suite/-/path/to/folder/suite2.snap"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="file-o"
      id="suite_-/path/to/folder/suite3.snap"
      label="suite3.​snap"
      link="/suite/-/path/to/folder/suite3.snap"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
  </div>
  <div
    dataMockType="Preview"
    fRaw={false}
    fShowBaseline={false}
    snapshot={undefined}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Preview
    </div>
  </div>
</div>
------------HTML PREVIEW---------------
<div style="display:flex;flex-direction:row;min-height:100vh;">
  <div
    class="giu-floats"
    style="height:0;left:0;position:absolute;top:0;width:0;"
  >
  </div>
  <div class="giu-hints"></div>
  <div
    dataMockType="Sidebar"
    linkBack="/folder/-/path/to"
    subtitle="-/path/to/snapshots"
  >
    <div style="color:blue;font-weight:bold;">
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      icon="folder-o"
      id="folder_-/path/to/folder/super/nested/folder"
      label="super/nested/folder"
      link="/folder/-/path/to/folder/super/nested/folder"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="folder-o"
      id="folder_-/path/to/folder/subdir"
      label="subdir"
      link="/folder/-/path/to/folder/subdir"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="file-o"
      id="suite_-/path/to/folder/suite1.snap"
      label="suite1.​snap"
      link="/suite/-/path/to/folder/suite1.snap"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="file-o"
      id="suite_-/path/to/folder/suite2.snap"
      label="suite2.​snap"
      link="/suite/-/path/to/folder/suite2.snap"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="file-o"
      id="suite_-/path/to/folder/suite3.snap"
      label="suite3.​snap"
      link="/suite/-/path/to/folder/suite3.snap"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
  </div>
  <div dataMockType="Preview">
    <div style="color:blue;font-weight:bold;">
      Preview
    </div>
  </div>
</div>
`;

exports[`AppContents renders a folder with subfolders correctly 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="giu-floats"
    style={
      Object {
        "height": 0,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
      }
    }
  />
  <div
    className="giu-hints"
  />
  <div
    dataMockType="Sidebar"
    fRaw={false}
    linkBack="/folder/-/path/to"
    subtitle="-/path/to/snapshots"
    title={
      <span>
        <Icon
          icon="folder-open-o"
          style={
            Object {
              "cursor": "default",
            }
          }
        />
         
        snapshots
      </span>
    }
    toggleRaw={[Function]}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="folder-o"
      id="folder_-/path/to/folder/super/nested/folder"
      label="super/nested/folder"
      link="/folder/-/path/to/folder/super/nested/folder"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="folder-o"
      id="folder_-/path/to/folder/subdir"
      label="subdir"
      link="/folder/-/path/to/folder/subdir"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
  </div>
  <div
    dataMockType="Preview"
    fRaw={false}
    fShowBaseline={false}
    snapshot={undefined}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Preview
    </div>
  </div>
</div>
------------HTML PREVIEW---------------
<div style="display:flex;flex-direction:row;min-height:100vh;">
  <div
    class="giu-floats"
    style="height:0;left:0;position:absolute;top:0;width:0;"
  >
  </div>
  <div class="giu-hints"></div>
  <div
    dataMockType="Sidebar"
    linkBack="/folder/-/path/to"
    subtitle="-/path/to/snapshots"
  >
    <div style="color:blue;font-weight:bold;">
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      icon="folder-o"
      id="folder_-/path/to/folder/super/nested/folder"
      label="super/nested/folder"
      link="/folder/-/path/to/folder/super/nested/folder"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="folder-o"
      id="folder_-/path/to/folder/subdir"
      label="subdir"
      link="/folder/-/path/to/folder/subdir"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
  </div>
  <div dataMockType="Preview">
    <div style="color:blue;font-weight:bold;">
      Preview
    </div>
  </div>
</div>
`;

exports[`AppContents renders a folder with suites correctly 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="giu-floats"
    style={
      Object {
        "height": 0,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
      }
    }
  />
  <div
    className="giu-hints"
  />
  <div
    dataMockType="Sidebar"
    fRaw={false}
    linkBack="/folder/-/path/to"
    subtitle="-/path/to/snapshots"
    title={
      <span>
        <Icon
          icon="folder-open-o"
          style={
            Object {
              "cursor": "default",
            }
          }
        />
         
        snapshots
      </span>
    }
    toggleRaw={[Function]}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="file-o"
      id="suite_-/path/to/folder/suite1.snap"
      label="suite1.​snap"
      link="/suite/-/path/to/folder/suite1.snap"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="file-o"
      id="suite_-/path/to/folder/suite2.snap"
      label="suite2.​snap"
      link="/suite/-/path/to/folder/suite2.snap"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="file-o"
      id="suite_-/path/to/folder/suite3.snap"
      label="suite3.​snap"
      link="/suite/-/path/to/folder/suite3.snap"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
  </div>
  <div
    dataMockType="Preview"
    fRaw={false}
    fShowBaseline={false}
    snapshot={undefined}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Preview
    </div>
  </div>
</div>
------------HTML PREVIEW---------------
<div style="display:flex;flex-direction:row;min-height:100vh;">
  <div
    class="giu-floats"
    style="height:0;left:0;position:absolute;top:0;width:0;"
  >
  </div>
  <div class="giu-hints"></div>
  <div
    dataMockType="Sidebar"
    linkBack="/folder/-/path/to"
    subtitle="-/path/to/snapshots"
  >
    <div style="color:blue;font-weight:bold;">
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      icon="file-o"
      id="suite_-/path/to/folder/suite1.snap"
      label="suite1.​snap"
      link="/suite/-/path/to/folder/suite1.snap"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="file-o"
      id="suite_-/path/to/folder/suite2.snap"
      label="suite2.​snap"
      link="/suite/-/path/to/folder/suite2.snap"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="file-o"
      id="suite_-/path/to/folder/suite3.snap"
      label="suite3.​snap"
      link="/suite/-/path/to/folder/suite3.snap"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
  </div>
  <div dataMockType="Preview">
    <div style="color:blue;font-weight:bold;">
      Preview
    </div>
  </div>
</div>
`;

exports[`AppContents renders a spinner while loading 1`] = `
<div
  dataMockType="LargeMessage"
>
  <div
    style={
      Object {
        "color": "blue",
        "fontWeight": "bold",
      }
    }
  >
    LargeMessage
  </div>
  <i
    className="giu-icon fa fa-circle-o-notch fa-spin"
    style={
      Object {
        "color": undefined,
        "cursor": "pointer",
        "fontSize": undefined,
        "letterSpacing": "normal",
      }
    }
  />
   Loading…
</div>
------------HTML PREVIEW---------------
<div dataMockType="LargeMessage">
  <div style="color:blue;font-weight:bold;">
    LargeMessage
  </div>
  <i
    class="giu-icon fa fa-circle-o-notch fa-spin"
    style="cursor:pointer;letter-spacing:normal;"
  >
  </i>
   Loading…
</div>
`;

exports[`AppContents renders a suite with a selected snapshot 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="giu-floats"
    style={
      Object {
        "height": 0,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
      }
    }
  />
  <div
    className="giu-hints"
  />
  <div
    dataMockType="Sidebar"
    fRaw={false}
    linkBack="/folder/-/path/to/folder"
    subtitle="-/path/to/folder/suite1.js.snap"
    title={
      <span>
        <Icon
          icon="file-o"
          style={
            Object {
              "cursor": "default",
            }
          }
        />
         
        suite1
      </span>
    }
    toggleRaw={[Function]}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Sidebar
    </div>
    <div
      dataMockType="SidebarGroup"
      name="groupname"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarGroup
      </div>
      <div
        dataMockType="SidebarItem"
        deleted={false}
        dirty={false}
        fSelected={false}
        hideBaseline={[Function]}
        icon="camera"
        id="groupname 1"
        label="1"
        link={
          Object {
            "pathname": "/suite/-/path/to/folder/suite1.js.snap",
            "state": Object {
              "id": "groupname 1",
            },
          }
        }
        saveAsBaseline={undefined}
        showBaseline={[Function]}
      >
        <div
          style={
            Object {
              "color": "blue",
              "fontWeight": "bold",
            }
          }
        >
          SidebarItem
        </div>
      </div>
      <div
        dataMockType="SidebarItem"
        deleted={false}
        dirty={false}
        fSelected={false}
        hideBaseline={[Function]}
        icon="camera"
        id="groupname 2"
        label="2"
        link={
          Object {
            "pathname": "/suite/-/path/to/folder/suite1.js.snap",
            "state": Object {
              "id": "groupname 2",
            },
          }
        }
        saveAsBaseline={undefined}
        showBaseline={[Function]}
      >
        <div
          style={
            Object {
              "color": "blue",
              "fontWeight": "bold",
            }
          }
        >
          SidebarItem
        </div>
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      deleted={false}
      dirty={false}
      fSelected={true}
      hideBaseline={[Function]}
      icon="camera"
      id="individual1 1"
      label="individual1"
      link={
        Object {
          "pathname": "/suite/-/path/to/folder/suite1.js.snap",
          "state": Object {
            "id": "individual1 1",
          },
        }
      }
      saveAsBaseline={undefined}
      showBaseline={[Function]}
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      deleted={false}
      dirty={false}
      fSelected={false}
      hideBaseline={[Function]}
      icon="camera"
      id="individual2 1"
      label="individual2"
      link={
        Object {
          "pathname": "/suite/-/path/to/folder/suite1.js.snap",
          "state": Object {
            "id": "individual2 1",
          },
        }
      }
      saveAsBaseline={undefined}
      showBaseline={[Function]}
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
  </div>
  <div
    dataMockType="Preview"
    fRaw={false}
    fShowBaseline={false}
    snapshot={
      Object {
        "css": Array [],
        "deleted": false,
        "dirty": false,
        "id": "individual1 1",
        "snap": "contents3",
      }
    }
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Preview
    </div>
  </div>
</div>
------------HTML PREVIEW---------------
<div style="display:flex;flex-direction:row;min-height:100vh;">
  <div
    class="giu-floats"
    style="height:0;left:0;position:absolute;top:0;width:0;"
  >
  </div>
  <div class="giu-hints"></div>
  <div
    dataMockType="Sidebar"
    linkBack="/folder/-/path/to/folder"
    subtitle="-/path/to/folder/suite1.js.snap"
  >
    <div style="color:blue;font-weight:bold;">
      Sidebar
    </div>
    <div
      dataMockType="SidebarGroup"
      name="groupname"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarGroup
      </div>
      <div
        dataMockType="SidebarItem"
        icon="camera"
        id="groupname 1"
        label="1"
      >
        <div style="color:blue;font-weight:bold;">
          SidebarItem
        </div>
      </div>
      <div
        dataMockType="SidebarItem"
        icon="camera"
        id="groupname 2"
        label="2"
      >
        <div style="color:blue;font-weight:bold;">
          SidebarItem
        </div>
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      fSelected
      icon="camera"
      id="individual1 1"
      label="individual1"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="camera"
      id="individual2 1"
      label="individual2"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
  </div>
  <div dataMockType="Preview">
    <div style="color:blue;font-weight:bold;">
      Preview
    </div>
  </div>
</div>
`;

exports[`AppContents renders a suite with grouped snapshots correctly 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="giu-floats"
    style={
      Object {
        "height": 0,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
      }
    }
  />
  <div
    className="giu-hints"
  />
  <div
    dataMockType="Sidebar"
    fRaw={false}
    linkBack="/folder/-/path/to/folder"
    subtitle="-/path/to/folder/suite1.js.snap"
    title={
      <span>
        <Icon
          icon="file-o"
          style={
            Object {
              "cursor": "default",
            }
          }
        />
         
        suite1
      </span>
    }
    toggleRaw={[Function]}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Sidebar
    </div>
    <div
      dataMockType="SidebarGroup"
      name="groupname"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarGroup
      </div>
      <div
        dataMockType="SidebarItem"
        deleted={false}
        dirty={false}
        fSelected={false}
        hideBaseline={[Function]}
        icon="camera"
        id="groupname 1"
        label="1"
        link={
          Object {
            "pathname": "/suite/-/path/to/folder/suite1.js.snap",
            "state": Object {
              "id": "groupname 1",
            },
          }
        }
        saveAsBaseline={undefined}
        showBaseline={[Function]}
      >
        <div
          style={
            Object {
              "color": "blue",
              "fontWeight": "bold",
            }
          }
        >
          SidebarItem
        </div>
      </div>
      <div
        dataMockType="SidebarItem"
        deleted={false}
        dirty={false}
        fSelected={false}
        hideBaseline={[Function]}
        icon="camera"
        id="groupname 2"
        label="2"
        link={
          Object {
            "pathname": "/suite/-/path/to/folder/suite1.js.snap",
            "state": Object {
              "id": "groupname 2",
            },
          }
        }
        saveAsBaseline={undefined}
        showBaseline={[Function]}
      >
        <div
          style={
            Object {
              "color": "blue",
              "fontWeight": "bold",
            }
          }
        >
          SidebarItem
        </div>
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      deleted={false}
      dirty={false}
      fSelected={false}
      hideBaseline={[Function]}
      icon="camera"
      id="individual1 1"
      label="individual1"
      link={
        Object {
          "pathname": "/suite/-/path/to/folder/suite1.js.snap",
          "state": Object {
            "id": "individual1 1",
          },
        }
      }
      saveAsBaseline={undefined}
      showBaseline={[Function]}
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      deleted={false}
      dirty={false}
      fSelected={false}
      hideBaseline={[Function]}
      icon="camera"
      id="individual2 1"
      label="individual2"
      link={
        Object {
          "pathname": "/suite/-/path/to/folder/suite1.js.snap",
          "state": Object {
            "id": "individual2 1",
          },
        }
      }
      saveAsBaseline={undefined}
      showBaseline={[Function]}
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
  </div>
  <div
    dataMockType="Preview"
    fRaw={false}
    fShowBaseline={false}
    snapshot={undefined}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Preview
    </div>
  </div>
</div>
------------HTML PREVIEW---------------
<div style="display:flex;flex-direction:row;min-height:100vh;">
  <div
    class="giu-floats"
    style="height:0;left:0;position:absolute;top:0;width:0;"
  >
  </div>
  <div class="giu-hints"></div>
  <div
    dataMockType="Sidebar"
    linkBack="/folder/-/path/to/folder"
    subtitle="-/path/to/folder/suite1.js.snap"
  >
    <div style="color:blue;font-weight:bold;">
      Sidebar
    </div>
    <div
      dataMockType="SidebarGroup"
      name="groupname"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarGroup
      </div>
      <div
        dataMockType="SidebarItem"
        icon="camera"
        id="groupname 1"
        label="1"
      >
        <div style="color:blue;font-weight:bold;">
          SidebarItem
        </div>
      </div>
      <div
        dataMockType="SidebarItem"
        icon="camera"
        id="groupname 2"
        label="2"
      >
        <div style="color:blue;font-weight:bold;">
          SidebarItem
        </div>
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="camera"
      id="individual1 1"
      label="individual1"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="camera"
      id="individual2 1"
      label="individual2"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
  </div>
  <div dataMockType="Preview">
    <div style="color:blue;font-weight:bold;">
      Preview
    </div>
  </div>
</div>
`;

exports[`AppContents renders a suite with individual snapshots correctly 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="giu-floats"
    style={
      Object {
        "height": 0,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
      }
    }
  />
  <div
    className="giu-hints"
  />
  <div
    dataMockType="Sidebar"
    fRaw={false}
    linkBack="/folder/-/path/to/folder"
    subtitle="-/path/to/folder/suite1.js.snap"
    title={
      <span>
        <Icon
          icon="file-o"
          style={
            Object {
              "cursor": "default",
            }
          }
        />
         
        suite1
      </span>
    }
    toggleRaw={[Function]}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      deleted={undefined}
      dirty={undefined}
      fSelected={false}
      hideBaseline={[Function]}
      icon="camera"
      id="individual1 1"
      label="individual1"
      link={
        Object {
          "pathname": "/suite/-/path/to/folder/suite1.js.snap",
          "state": Object {
            "id": "individual1 1",
          },
        }
      }
      saveAsBaseline={undefined}
      showBaseline={[Function]}
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      deleted={undefined}
      dirty={undefined}
      fSelected={false}
      hideBaseline={[Function]}
      icon="camera"
      id="individual2 1"
      label="individual2"
      link={
        Object {
          "pathname": "/suite/-/path/to/folder/suite1.js.snap",
          "state": Object {
            "id": "individual2 1",
          },
        }
      }
      saveAsBaseline={undefined}
      showBaseline={[Function]}
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
  </div>
  <div
    dataMockType="Preview"
    fRaw={false}
    fShowBaseline={false}
    snapshot={undefined}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Preview
    </div>
  </div>
</div>
------------HTML PREVIEW---------------
<div style="display:flex;flex-direction:row;min-height:100vh;">
  <div
    class="giu-floats"
    style="height:0;left:0;position:absolute;top:0;width:0;"
  >
  </div>
  <div class="giu-hints"></div>
  <div
    dataMockType="Sidebar"
    linkBack="/folder/-/path/to/folder"
    subtitle="-/path/to/folder/suite1.js.snap"
  >
    <div style="color:blue;font-weight:bold;">
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      icon="camera"
      id="individual1 1"
      label="individual1"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="camera"
      id="individual2 1"
      label="individual2"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
  </div>
  <div dataMockType="Preview">
    <div style="color:blue;font-weight:bold;">
      Preview
    </div>
  </div>
</div>
`;

exports[`AppContents renders error messages 1`] = `
<div
  dataMockType="LargeMessage"
>
  <div
    style={
      Object {
        "color": "blue",
        "fontWeight": "bold",
      }
    }
  >
    LargeMessage
  </div>
  <i
    className="giu-icon fa fa-warning"
    onClick={undefined}
    style={
      Object {
        "color": "#999999",
        "cursor": undefined,
        "fontSize": undefined,
        "letterSpacing": "normal",
      }
    }
  />
   
  <b>
    An error occurred:
  </b>
  <br />
  Something horrible!
  <br />
  <span
    className="giu-button"
    onClick={undefined}
    style={
      Object {
        "WebkitUserSelect": "none",
        "border": "1px solid #999999",
        "borderRadius": 5,
        "cursor": "pointer",
        "display": "inline-block",
        "padding": "1px 5px",
        "userSelect": "none",
      }
    }
  >
    <i
      className="giu-icon fa fa-home"
      onClick={undefined}
      style={
        Object {
          "color": "#999999",
          "cursor": undefined,
          "fontSize": undefined,
          "letterSpacing": "normal",
        }
      }
    />
     Home
  </span>
</div>
------------HTML PREVIEW---------------
<div dataMockType="LargeMessage">
  <div style="color:blue;font-weight:bold;">
    LargeMessage
  </div>
  <i
    class="giu-icon fa fa-warning"
    style="color:#999999;letter-spacing:normal;"
  >
  </i>
   
  <b>
    An error occurred:
  </b>
  <br>
  Something horrible!
  <br>
  <span
    class="giu-button"
    style="-webkit-user-select:none;border:1px solid #999999;border-radius:5px;cursor:pointer;display:inline-block;padding:1px 5px;user-select:none;"
  >
    <i
      class="giu-icon fa fa-home"
      style="color:#999999;letter-spacing:normal;"
    >
    </i>
     Home
  </span>
</div>
`;

exports[`AppContents renders the root folder correctly 1`] = `
<div
  style={
    Object {
      "display": "flex",
      "flexDirection": "row",
      "minHeight": "100vh",
    }
  }
>
  <div
    className="giu-floats"
    style={
      Object {
        "height": 0,
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": 0,
      }
    }
  />
  <div
    className="giu-hints"
  />
  <div
    dataMockType="Sidebar"
    fRaw={false}
    linkBack={null}
    subtitle="-"
    title={
      <span>
        <Icon
          icon="home"
          style={
            Object {
              "cursor": "default",
            }
          }
        />
         Root
      </span>
    }
    toggleRaw={[Function]}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="folder-o"
      id="folder_-/path/to/folder"
      label="path/to/folder"
      link="/folder/-/path/to/folder"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      dirty={false}
      fSelected={false}
      icon="folder-o"
      id="folder_-/path/to/folder2"
      label="path/to/folder2"
      link="/folder/-/path/to/folder2"
    >
      <div
        style={
          Object {
            "color": "blue",
            "fontWeight": "bold",
          }
        }
      >
        SidebarItem
      </div>
    </div>
  </div>
  <div
    dataMockType="Preview"
    fRaw={false}
    fShowBaseline={false}
    snapshot={undefined}
  >
    <div
      style={
        Object {
          "color": "blue",
          "fontWeight": "bold",
        }
      }
    >
      Preview
    </div>
  </div>
</div>
------------HTML PREVIEW---------------
<div style="display:flex;flex-direction:row;min-height:100vh;">
  <div
    class="giu-floats"
    style="height:0;left:0;position:absolute;top:0;width:0;"
  >
  </div>
  <div class="giu-hints"></div>
  <div
    dataMockType="Sidebar"
    subtitle="-"
  >
    <div style="color:blue;font-weight:bold;">
      Sidebar
    </div>
    <div
      dataMockType="SidebarItem"
      icon="folder-o"
      id="folder_-/path/to/folder"
      label="path/to/folder"
      link="/folder/-/path/to/folder"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
    <div
      dataMockType="SidebarItem"
      icon="folder-o"
      id="folder_-/path/to/folder2"
      label="path/to/folder2"
      link="/folder/-/path/to/folder2"
    >
      <div style="color:blue;font-weight:bold;">
        SidebarItem
      </div>
    </div>
  </div>
  <div dataMockType="Preview">
    <div style="color:blue;font-weight:bold;">
      Preview
    </div>
  </div>
</div>
`;
